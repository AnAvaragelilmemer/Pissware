local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
	Name = "Pissware",
	LoadingTitle = "Welcome to Pissware : Remade.",
	LoadingSubtitle = "Made by drmr and nutshcak",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "piswarheru"
	},
	KeySystem = true, -- Set this to true to use our key system
	KeySettings = {
		Title = "pissware pee system",
		Subtitle = "shit keysys",
		Note = "just type DRKpsEojgNhlr",

		FileName = "pisswakey",
		SaveKey = true,
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "DRKpsEojgNhlr"
	}
})

local home = Window:CreateTab("Home")
local Player = Window:CreateTab("Player")
local AimEsp = Window:CreateTab("Aimbot/esp")
local scripts = Window:CreateTab("Scripts")

local Paragraph = home:CreateParagraph({Title = "Pissware : remade", Content = "holy cow? pissware updating??? real, this is gonna be a update log ajhsdkahds"})

local Slider = Player:CreateSlider({
	Name = "Speed",
	Range = {1, 500},
	Increment = 1,
	Suffix = "Walkspeed",
	CurrentValue = 16,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value -- The function that takes place when the slider changes
    		-- The variable (Value) is a number which correlates to the value the slider is currently at
	end,
})

local Slider = Player:CreateSlider({
	Name = "Jump",
	Range = {0, 1000},
	Increment = 1,
	Suffix = "Jumppower",
	CurrentValue = 50,
	Flag = "Slider2", 
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
    		
	end,
})

local Slider = Player:CreateSlider({
	Name = "Gravity",
	Range = {0, 1000},
	Increment = 1,
	Suffix = "Gravity",
	CurrentValue = 196,
	Flag = "Slider3", 
	Callback = function(Value)
		game.Workspace.Gravity = Value
    		
	end,
})

local Slider = Player:CreateSlider({
	Name = "Field of View",
	Range = {1, 120},
	Increment = 1,
	Suffix = "FOV",
	CurrentValue = 70,
	Flag = "Slider4", 
	Callback = function(Value)
		game:GetService'Workspace'.Camera.FieldOfView = Value
    		
	end,
})

local Button = Player:CreateButton({
	Name = "rejoin",
	Callback = function()
		game:GetService('TeleportService'):TeleportToPlaceInstance(game.PlaceId,game.JobId,game:GetService('Players').LocalPlayer)
	end,
})

local Button = Player:CreateButton({
	Name = "leave game",
	Callback = function()
		game:Shutdown()
	end,
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Mouse = LocalPlayer:GetMouse()
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local CurrentTarget = nil

local Connections = {
	CharacterAdded = {}
}

table.insert(Connections.CharacterAdded, LocalPlayer.CharacterAdded:Connect(function(Char)
	Character = Char
	Humanoid = Char:WaitForChild("Humanoid")
	HumanoidRootPart = Char:WaitForChild("HumanoidRootPart")
end))

local Aimbot = {}; do
	local Loops = {RenderStepped = {}, Heartbeat = {}, Stepped = {}}
	function Aimbot:BindToRenderStepped(id, callback)
		if not Loops.RenderStepped[id] then
			Loops.RenderStepped[id] = RunService.RenderStepped:Connect(callback)
		end
	end
	function Aimbot:UnbindFromRenderStepped(id)
		if Loops.RenderStepped[id] then
			Loops.RenderStepped[id]:Disconnect()
			Loops.RenderStepped[id] = nil
		end
	end
	function Aimbot:StoreCurrentTarget(Player)
		CurrentTarget = Player
	end
	function Aimbot:IfHolding()
		return UIS:IsMouseButtonPressed(Enum.UserInputType.MouseButton2)
	end
    function Aimbot:DistanceCheck(Player, Distance)
        shared.DistanceCheck = shared.DistanceCheck or true
        shared.Distance = shared.Distance or 100

        if Distance and shared.DistanceCheck then
            return (Player.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude <= Distance
        else
            return true
        end
    end
    function Aimbot:TeamCheck(Player, Toggle)
		if Toggle then
			return Player.Team ~= LocalPlayer.Team
		else
			return true
		end
	end
	function Aimbot:GetClosestPlayerToMouse()
		local ClosestPlayer = nil
		local ClosestPlayerDistance = math.huge

		for _, Player in next, Players:GetPlayers() do
			if Player ~= LocalPlayer and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
				local ScreenPoint = Camera:WorldToViewportPoint(Player.Character.HumanoidRootPart.Position)
				local MousePoint = Vector2.new(Mouse.X, Mouse.Y)
				local Distance = (MousePoint - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                local _, OnScreen = Camera:WorldToViewportPoint(Player.Character.HumanoidRootPart.Position)

				if Aimbot:DistanceCheck(Player, shared.Distance) and OnScreen and Distance < ClosestPlayerDistance then
					ClosestPlayer = Player
					ClosestPlayerDistance = Distance
				end
			end
		end

		return ClosestPlayer
	end
    function Aimbot:GetClosestFromDistance()
        local ClosestPlayer = nil
        local ClosestPlayerDistance = math.huge

        for _, Player in next, Players:GetPlayers() do
            if Player ~= LocalPlayer and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                local Distance = (Player.Character.HumanoidRootPart.Position - HumanoidRootPart.Position).Magnitude

                if Aimbot:DistanceCheck(Player, shared.Distance) and Distance < ClosestPlayerDistance then
                    ClosestPlayer = Player
                    ClosestPlayerDistance = Distance
                end
            end
        end

        return ClosestPlayer
    end
    function Aimbot:DoMethod()
        shared.Method = shared.Method or "Closest To Mouse"

        if shared.Method == "Closest To Mouse" then
            return self:GetClosestPlayerToMouse()
        elseif shared.Method == "Distance" then
            return self:GetClosestFromDistance()
        end
    end
	Aimbot:StoreCurrentTarget(Aimbot:DoMethod())
	function Aimbot:Update()
		getgenv().Smoothness = shared.Smoothness or .25
		getgenv().TeamCheck = shared.TeamCheck or false
        getgenv().SelectedView = shared.SelectedView or "First Person"
        getgenv().TargetPart = shared.TargetPart or "Head"

		if CurrentTarget and CurrentTarget.Character then
			local Vector = Camera:WorldToViewportPoint(CurrentTarget.Character:WaitForChild(TargetPart).Position)

			if not self:IfHolding() then
				self:StoreCurrentTarget(self:DoMethod())
			elseif self:IfHolding() and self:TeamCheck(CurrentTarget, TeamCheck) then
				if SelectedView == "First Person" and UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then
					Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position, CurrentTarget.Character:WaitForChild(TargetPart).Position), smooSmoothnessthness)
				elseif SelectedView == "Third Person" and UIS.MouseBehavior == Enum.MouseBehavior.Default then
					mousemoverel((Vector.X - Mouse.X) / 2 * Smoothness, (Vector.Y - Mouse.Y - 35) / 2 * Smoothness)
                elseif SelectedView == "Auto" then
                    if UIS.MouseBehavior == Enum.MouseBehavior.LockCenter then
                        Camera.CFrame = Camera.CFrame:Lerp(CFrame.new(Camera.CFrame.Position, CurrentTarget.Character:WaitForChild(TargetPart).Position), Smoothness)
                    elseif UIS.MouseBehavior == Enum.MouseBehavior.Default then
                        mousemoverel((Vector.X - Mouse.X) / 2 * Smoothness, (Vector.Y - Mouse.Y - 35) / 2 * Smoothness)
                    end
				end
			end
		else
			self:StoreCurrentTarget(self:DoMethod())
		end
	end
	function Aimbot:Toggle(boolean)
		if boolean then
			self:BindToRenderStepped("Aimbot", function()
				self:Update()
			end)
		else
			self:UnbindFromRenderStepped("Aimbot")
		end
	end
end
local Esp = {}; do
    Instance.new("ScreenGui",game.CoreGui).Name = "Kaoru"
    local ChamsFolder = Instance.new("Folder")
    ChamsFolder.Name = "ChamsFolder"
    for _,v in next, game.CoreGui:GetChildren() do
        if v:IsA'ScreenGui' and v.Name == 'Kaoru' then
            ChamsFolder.Parent = v
        end
    end
    Players.PlayerRemoving:Connect(function(plr)
        if ChamsFolder:FindFirstChild(plr.Name) then
            ChamsFolder[plr.Name]:Destroy()
        end
    end)
    local Loops = {RenderStepped = {}, Heartbeat = {}, Stepped = {}}
    function Esp:BindToRenderStepped(id, callback)
        if not Loops.RenderStepped[id] then
            Loops.RenderStepped[id] = RunService.RenderStepped:Connect(callback)
        end
    end
    function Esp:UnbindFromRenderStepped(id)
        if Loops.RenderStepped[id] then
            Loops.RenderStepped[id]:Disconnect()
            Loops.RenderStepped[id] = nil
        end
    end
    function Esp:TeamCheck(Player, Toggle)
        if Toggle then
            return Player.Team ~= LocalPlayer.Team
        else
            return true
        end
    end
    function Esp:Update()
        for _, Player in next, Players:GetChildren() do
            if ChamsFolder:FindFirstChild(Player.Name) then
                Chams = ChamsFolder[Player.Name]
                Chams.Enabled = false
                Chams.FillColor = Color3.fromRGB(255, 255, 255)
                Chams.OutlineColor = Color3.fromHSV(tick()%5/5,1,1)
            end
            if Player ~= LocalPlayer and Player.Character then
                if ChamsFolder:FindFirstChild(Player.Name) == nil then
                    local chamfolder = Instance.new("Highlight")
                    chamfolder.Name = Player.Name
                    chamfolder.Parent = ChamsFolder
                    Chams = chamfolder
                end
                Chams.Enabled = true
                Chams.Adornee = Player.Character
                Chams.OutlineTransparency = 0
                Chams.DepthMode = Enum.HighlightDepthMode[(true and "AlwaysOnTop" or "Occluded")]
                Chams.FillTransparency = 1
            end
        end
    end
    function Esp:Toggle(boolean)
        if boolean then
            self:BindToRenderStepped("Esp", function()
                self:Update()
            end)
        else
            self:UnbindFromRenderStepped("Esp")
            ChamsFolder:ClearAllChildren()
        end
    end
end



AimEsp:CreateSection("Aimbot")

AimEsp:CreateToggle({
    Name = "Aimbot",
    CurrentValue = false,
    Callback = function(AimAssistToggle)
        Aimbot:Toggle(AimAssistToggle)
    end,
})

AimEsp:CreateSection("Aimbot Settings")

AimEsp:CreateDropdown({
    Name = "Method",
    Options = {"Closest To Mouse", "Distance"},
    CurrentOption = "Closest To Mouse",
    Callback = function(Method)
        shared.Method = Method
    end,
})

AimEsp:CreateDropdown({
    Name = "Target Part",
    Options = {
        "Head",
        "Torso",
        "Right Arm",
        "Left Arm",
        "Right Leg",
        "Left Leg"
    },
    CurrentOption = "Head",
    Callback = function(TargetPart)
        if TargetPart == "Torso" then
            shared.TargetPart = "HumanoidRootPart"
        elseif TargetPart ~= "Torso" then
            shared.TargetPart = TargetPart
        end
    end,
})

AimEsp:CreateDropdown({
    Name = "Selected View",
    Options = {"First Person", "Third Person", "Auto"},
    CurrentOption = "First Person",
    Callback = function(SelectedView)
        shared.SelectedView = SelectedView
    end,
})

AimEsp:CreateSlider({
    Name = "Smoothness",
    Range = {0, 1},
    Increment = .01,
    CurrentValue = .25,
    Callback = function(Smoothness)
        shared.Smoothness = Smoothness
    end,
})

AimEsp:CreateToggle({
    Name = "Distance Check",
    CurrentValue = true,
    Callback = function(DistanceCheckToggle)
        shared.DistanceCheck = DistanceCheckToggle
    end,
})

AimEsp:CreateSlider({
    Name = "Distance",
    Range = {0, 1000},
    Increment = 1,
    CurrentValue = 100,
    Callback = function(Distance)
        shared.Distance = Distance
    end,
})

AimEsp:CreateToggle({
    Name = "Team Check",
    CurrentValue = false,
    Callback = function(TeamCheckToggle)
        shared.TeamCheck = TeamCheckToggle
    end,
})

AimEsp:CreateSection("Esp")

AimEsp:CreateToggle({
    Name = "Esp",
    CurrentValue = false,
    Callback = function(EspToggle)
        Esp:Toggle(EspToggle)
    end,
})

AimEsp:CreateSection("Esp Settings")

AimEsp:CreateToggle({
    Name = "Team Check",
    CurrentValue = false,
    Callback = function(ESPTeamCheck)
        shared.ESPTeamCheck = ESPTeamCheck
    end,
})

--credits by kaoru, https://scriptblox.com/script/Universal-Script-FPS-Universal-7170


Scripts:CreateSection("Universal")

local Button = Scripts:CreateButton({
	Name = "BetterBypasser",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/daddysyn/synergy/additional/betterbypasser",true))()
	end,
})

-- why did i even add 3 dexs
local Button = Scripts:CreateButton({
	Name = "Dex v4",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/AnAvaragelilmemer/AnAvaragelilmemer/main/dexv4"))()
	end,
})

local Button = Scripts:CreateButton({
	Name = "Dex V3",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Babyhamsta/RBLX_Scripts/main/Universal/BypassedDarkDexV3.lua", true))()
	end,
})

local Button = Scripts:CreateButton({
	Name = "awsome explorr",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/wally-rblx/awesome-explorer/main/source.lua"))()
	end,
})

local Button = Scripts:CreateButton({
	Name = "universal slient aim",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Averiias/Universal-SilentAim/main/main.lua"))()
	end,
})

local Button = Scripts:CreateButton({
	Name = "Hitbox Expander",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/roburox/s1mple/main/scripts/hitboxexpand"))()
        end,
})


Scripts:CreateSection("scripts that has universal and games support")

local Button = Scripts:CreateButton({
	Name = "parvus hub",
	Callback = function()
		loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/AlexR32/Parvus/main/Loader.lua"))()
        end,
})

local Button = Scripts:CreateButton({
	Name = "Vision hub",
	Callback = function()
		loadstring(game:HttpGetAsync('https://visionhub.dev/loader.lua'))()
        end,
})

Scripts:CreateSection("scripts that only support games/1 game")

local Button = Scripts:CreateButton({
	Name = "Unfair Hub",
	Callback = function()
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/rblxscriptsnet/unfair/main/rblxhub.lua'),true))()
        end,
})
 
local Button = Scripts:CreateButton({
	Name = "Vg hub",
	Callback = function()
		sec:Button("V.G Hub", function()
SolarisLib:Notification("Notification", "too much games, but i will print the supported games press f9")
print("arsenal")
print("climb 1,000 stairs")
print("survive the night")
print("World//Zero")
print("Vehicle Legends")
print("build a boat for treasure")
print("blox fruits")
print("project XL")
print("Magnet Simulator")
print("Jailbreak")
print("adopt me")
print("tsunami survival")
print("zombie rush")
print("zombie uprising")
print("Soda Legends")
print("Bubble Gum Simulator")
print("Knife Simulator")
print("Ninja Legends")
print("Ninja Legends 2")
print("Dungeon Quest!")
print("super bomb survival")
print("shindo")
print("mm2")
print("natural disaster survival")
print("elemental battlegrounds")
print("field trip z")
print("dragon adventures")
print("vehicle simulator")
print("little world")
print("age of heros")
print("zombies attack")
print("muscle legends")
print("cursed islands")
print("KAT")
print("Assassin")
print("Ragdoll Engine")
print("The floor is LAVA")
print("Legends of speed")
print("elemental legends")
print("mega easy obby")
print("taping-gods")
print("break-in-story")
print("the labyrinth")
print("weaponry")
print("SHOOT OUT!")
print("Destruction Simulator")
print("Trade Tower")
print("The asylum")
print("green vile")
print("the maze")
print("Tower of hell")
print("Warrior Champions")
print("be crushed by a speeding wall")
print("survive the disasters! classic")
print("Speed run 4")
print("Timber!")
print("demonfall")
print("car crushers 2")
print("da hood")
print("wisteria")
print("the final stand 2")
print("pet simulator X")
print("pet simulator")
print("a universal time")
print("dragon blox")
print("Rise of nations")
print("Specter")
print("project-star")
print("flee the facility")
print("lumber tycoon 2")
print("strongest punch simulator")
print("meep city")
print("counter blox")
print("youtube simulato x")
print("survive the killer!")
print("your bizzare adventure")
print("project baki 2")
print("true piece")
print("giant simulator")
print("nerf strike")
print("pet fighters simulator")
print('super power fighting simulator')
print('treasure quest')
print("king legacy")
print('legends re:written')
print("anime simulator x")
print("blackhawk rescue mission 5")
print("anime dimensions simulator")
print("the wild west")
print("project hero")
print("big brain simulator")
print("tapping mania")
print("unconventional")
print("laundry simulator")
print("color block")
print("swordburst 2")
print("pets-story")
print("saitamania")
print("jojo: crusaders' heaven")
print("scp 3008")
print("bee swarm simulator")
print("military tycoon")
print("base battles")
print("fish sim")
print("two piece")
print("critical legends")
print("critical legends 2")
print("dbz adventures unleashed")
print("rushpoint")
print("anime cross world")
print("demon slayer:moonrise")
print("mimic")
print("anime battlegrounds X")
print("weapon fighting simulator")
print("demon slayer burning ashes")
print("blade quest")
print("loomian legacy")
print("PLS DONATE")
print("DBZ FINAL REMASTERED")
print("criminality")
print(" driving empire")
print("phantom forces")
print("stand upright : rebooted")
print("a hero's destiny")
print("elemental awakening")
print("soul war")
print("rate my avatar")
print("ability wars")
print("bid battles")
print("era of althea")
print("tabing simulator")
print("roblox unbreakable")
print("evade")
print("speed run simulator")
print("bloxburg")
print("anime story")
loadstring(game:HttpGet('https://raw.githubusercontent.com/1201for/V.G-Hub/main/V.Ghub'))()

        end,
})
